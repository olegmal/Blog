version: "3"

#docker run --rm -it -p 8010:8000 -v D:\Hillel\Blog\src:/Blog/src
#           --name blog_cont blog_image  ./commands/start_server_dev.sh



services:
    backend:
        build: ./
        container_name: blog_container
        working_dir: /Blog
        restart: always
        ports:
          - 8010:8000
        volumes:
          - ./src:/Blog/src
          - ./commands:/Blog/commands
        command:
          - ./commands/start_server_dev.sh
        env_file:
          - .env
        depends_on:
          - postgres
          - redis

    postgres:
        image: postgres:16.1
        ports:
          - 5432:5432
        volumes:
          - pg_data:/var/lib/postgresql/data
        env_file:
          - .env
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin_container
        restart: on-failure
        ports:
          - 5000:80
        volumes:
          - pgadmin_data:/var/lib/pgadmin
        env_file:
          - .env
        depends_on:
          - postgres

    mongo:
      image: mongo
      container_name: mongo
      restart: always
      env_file: .env
      environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=root
        - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
        - MONGO_INITDB_USERNAME=${MONGO_DB_USERNAME}
        - MONGO_INITDB_PASSWORD=${MONGO_DB_PASSWORD}
      volumes:
        - ${PWD}/_data/mongo:/data/db
        - ${PWD}/docker/_mongo/fixtures:/import
        - ${PWD}/docker/_mongo/scripts/init.sh:/docker-entrypoint-initdb.d/setup.sh
      ports:
        - 27017:27017


volumes:
  pg_data: { }
  pgadmin_data: { }



